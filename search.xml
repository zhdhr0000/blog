<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Android 7.0 PopupWindow的一个展示Bug]]></title>
      <url>http://zhdhr0000.github.io/blog/2017/02/20/1/</url>
      <content type="html"><![CDATA[<h2 id="起因与Bug详情"><a href="#起因与Bug详情" class="headerlink" title="起因与Bug详情"></a>起因与Bug详情</h2><p>前段时间有反馈过来说,在Android7.0中,PopupWindow的展示位置出了问题(最开始以为没弹出来,后来发现是位置错了),通过查<del>谷</del>看<del>歌</del>源<del>搜</del>码<del>索</del>到了可能的情况和一些文章.</p>
<p>但找到的文章对于问题的表述不太完整,还有一些文章根本就是搞错了原因(大量文章说位置错误是由于PopupWindow的宽高设置的太大了…醉了),后来结合源码和实际的Bug情况看到了具体的详细原因.</p>
<p>这个Bug的具体情况是:在使用PopupWindow调用<code>showAtLocation</code>方法<code>showAsDropDown</code>方法和<code>update</code>方法时,如果传入的Gravity参数不为<code>Gravity.START|Gravity.TOP</code>则Gravity会被设置为<code>Gravity.START|Gravity.TOP</code>,PopupWindow的位置即发生了改变,可以通过反射来改掉这个Bug,下面是这个Bug的详细解法</p>
<h2 id="Bug原因"><a href="#Bug原因" class="headerlink" title="Bug原因"></a>Bug原因</h2><p>具体问题发生在<code>computeGravity</code>方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">private int computeGravity() &#123;</div><div class="line">    int gravity = Gravity.START | Gravity.TOP;</div><div class="line">    if (mClipToScreen || mClippingEnabled) &#123;</div><div class="line">        gravity |= Gravity.DISPLAY_CLIP_VERTICAL;</div><div class="line">    &#125;</div><div class="line">    return gravity;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以看到返回的gravity值,在方法的一开始就被强制设置为了<code>Gravity.START|Gravity.TOP</code>,所以我们传入的参数并没有起到任何作用,而这个Bug只有API版本24,Android 7.0的SDK是这样,无责任猜想可能是Android系统开发的某位大哥,在写分屏相关的UI代码的时候,出于测试方便或者什么的,直接将这里写死了<code>╮(╯_╰)╭</code><br>不过我们可以通过反射来改成正确的代码.</p>
<div align="center"><br><img src="/blog/2017/02/20/1/goutou.jpg" alt="一个耿直的微笑"><br></div>

<h2 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h2><p>首先查看一下都哪里用到了这个<code>computeGravity</code>,然后通过搜索看到,分别是1418行的<code>createPopupLayoutParams</code>方法里出现了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p.gravity = computeGravity();</div></pre></td></tr></table></figure></p>
<p>以及在1096行和2081行的两个<code>update</code>方法内部出现了同样的一行代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">final int newGravity = computeGravity();</div></pre></td></tr></table></figure></p>
<p>由于<del>懒</del>在实际使用中并没有通过<code>update</code>来更新PopupWindow的位置,并且也只是用了<code>showAtLocation</code>,所以暂没有对<code>update</code>和<code>showAsDropDown</code>进行反射来重写方法,只重写了<code>showAtLocation</code>,理论上讲,<code>createPopupLayoutParams</code>同时被<code>showAtLocation</code>和<code>showAsDropDown</code>方法用到了,且这是一个私有方法,所以需要分别重写<code>showAtLocation</code>和<code>showAsDropDown</code>方法以及两个<code>update</code>方法</p>
<p>这里提供出一个修改方案,import和package已去掉,如果要使用请自行添加,这里特别说明一下<code>TransitionManager.endTransitions(mDecorView);</code>,这行代码在IDE中很可能会报错标红,原因是使用了高版本API (Android M SDK 23)而没有进行版本判断,但实际上可以不用理会,因为目前这个Bug只有7.0这一个版本出现了,所以我在方法的最开始进行了当前Android版本的判断,如果不是版本号24的7.0版本,直接执行super.showAtLocation调用原PopupWindow的方法,之后return掉了这个方法,毕竟反射也是会带来额外一丢丢的性能和内存占用.如果不想让他报红可以选择改成if else的形式.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div></pre></td><td class="code"><pre><div class="line">public class NougatPopupWindow extends PopupWindow &#123;</div><div class="line"></div><div class="line">    public NougatPopupWindow(View contentView, int width, int height, boolean focusable) &#123;</div><div class="line">        super(contentView, width, height, focusable);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void showAtLocation(View parent, int gravity, int x, int y) &#123;</div><div class="line">        if (Build.VERSION.SDK_INT != 24) &#123;</div><div class="line">            super.showAtLocation(parent, gravity, x, y);</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        Object obj = getParam(&quot;mContentView&quot;);</div><div class="line">        View mContentView = (View) obj;</div><div class="line">        if (isShowing() || mContentView == null) &#123;</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        obj = getParam(&quot;mDecorView&quot;);</div><div class="line">        ViewGroup mDecorView = (ViewGroup) obj;</div><div class="line">        //RequireAPI M but if SDK_INT != N,super.showAtLocation and returned;</div><div class="line">        TransitionManager.endTransitions(mDecorView);</div><div class="line"></div><div class="line">        execMethod(&quot;detachFromAnchor&quot;, new Class[]&#123;&#125;, new Object[]&#123;&#125;);</div><div class="line"></div><div class="line">        setParam(&quot;mIsShowing&quot;, true);</div><div class="line">        setParam(&quot;mIsDropdown&quot;, false);</div><div class="line"></div><div class="line">        obj = execMethod(&quot;createPopupLayoutParams&quot;, new Class[]&#123;IBinder.class&#125;, new Object[]&#123;parent.getWindowToken()&#125;);</div><div class="line">        final WindowManager.LayoutParams p = (WindowManager.LayoutParams) obj;</div><div class="line">        p.gravity = computeGravity(gravity);</div><div class="line"></div><div class="line">        execMethod(&quot;preparePopup&quot;,new Class[]&#123;WindowManager.LayoutParams.class&#125;,new Object[]&#123;p&#125;);</div><div class="line"></div><div class="line">        if (gravity != Gravity.NO_GRAVITY) &#123;</div><div class="line">            p.gravity = gravity;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        p.x = x;</div><div class="line">        p.y = y;</div><div class="line"></div><div class="line">        execMethod(&quot;invokePopup&quot;,new Class[]&#123;WindowManager.LayoutParams.class&#125;,new Object[]&#123;p&#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Object getParam(String paramName) &#123;</div><div class="line">        if (TextUtils.isEmpty(paramName)) &#123;</div><div class="line">            return null;</div><div class="line">        &#125;</div><div class="line">        try &#123;</div><div class="line">            Field field = PopupWindow.class.getDeclaredField(paramName);</div><div class="line">            field.setAccessible(true);</div><div class="line">            return field.get(this);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        return null;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void setParam(String paramName, Object obj) &#123;</div><div class="line">        if (TextUtils.isEmpty(paramName)) &#123;</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        try &#123;</div><div class="line">            Field field = PopupWindow.class.getDeclaredField(paramName);</div><div class="line">            field.setAccessible(true);</div><div class="line">            field.set(this, obj);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Object execMethod(String methodName, Class[] cls, Object[] args) &#123;</div><div class="line">        if (TextUtils.isEmpty(methodName)) &#123;</div><div class="line">            return null;</div><div class="line">        &#125;</div><div class="line">        try &#123;</div><div class="line">            Method method = getMethod(PopupWindow.class, methodName, cls);</div><div class="line">            method.setAccessible(true);</div><div class="line">            return method.invoke(this, args);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        return null;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Method getMethod(Class clazz, String methodName,</div><div class="line">                             final Class[] classes) throws NoSuchMethodException &#123;</div><div class="line">        Method method = null;</div><div class="line">        try &#123;</div><div class="line">            method = clazz.getDeclaredMethod(methodName, classes);</div><div class="line">        &#125; catch (NoSuchMethodException e) &#123;</div><div class="line">            try &#123;</div><div class="line">                method = clazz.getMethod(methodName, classes);</div><div class="line">            &#125; catch (NoSuchMethodException ex) &#123;</div><div class="line">                if (clazz.getSuperclass() == null) &#123;</div><div class="line">                    return method;</div><div class="line">                &#125; else &#123;</div><div class="line">                    method = getMethod(clazz.getSuperclass(), methodName,</div><div class="line">                            classes);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return method;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    private int computeGravity(int mGravity) &#123;</div><div class="line">        setParam(&quot;mGravity&quot;, mGravity);</div><div class="line">        int gravity = mGravity == Gravity.NO_GRAVITY ? Gravity.START | Gravity.TOP : mGravity;</div><div class="line"></div><div class="line">        Object obj = getParam(&quot;mIsDropdown&quot;);</div><div class="line">        boolean mIsDropdown = (boolean) obj;</div><div class="line">        obj = getParam(&quot;mClipToScreen&quot;);</div><div class="line">        boolean mClipToScreen = (boolean) obj;</div><div class="line">        obj = getParam(&quot;mClippingEnabled&quot;);</div><div class="line">        boolean mClippingEnabled = (boolean) obj;</div><div class="line">        if (mIsDropdown &amp;&amp; (mClipToScreen || mClippingEnabled)) &#123;</div><div class="line">            gravity |= Gravity.DISPLAY_CLIP_VERTICAL;</div><div class="line">        &#125;</div><div class="line">        return gravity;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><em>转载请注明出处</em><br><em>文中部分内容参考了作者Kinva的文章,链接:<a href="http://www.jianshu.com/p/0df10893bf5b" target="_blank" rel="external">http://www.jianshu.com/p/0df10893bf5b</a></em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://zhdhr0000.github.io/blog/2017/02/03/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
